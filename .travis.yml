language: cpp
sudo: false
dist: xenial

os: linux

services:
  - postgresql
  - mysql

matrix:
  include:
#  - env: GCC_VERSION=4.9 BUILD_TYPE=Debug ARCH=32
#    addons: { postgresql: "10" , apt: {packages: [g++-4.9-multilib,"linux-libc-dev:i386",postgresql-10,postgresql-client-10] , sources: [ubuntu-toolchain-r-test]}}
  - env: GCC_VERSION=4.9 BUILD_TYPE=Debug ARCH=64
    compiler: gcc
    addons: { apt: {packages: [g++-4.9] , sources: [ubuntu-toolchain-r-test]}}
#  - env: GCC_VERSION=5 BUILD_TYPE=Debug ARCH=32
#    addons: { postgresql: "10" , apt: {packages: [g++-5-multilib,"linux-libc-dev:i386",postgresql-10,postgresql-client-10] , sources: [ubuntu-toolchain-r-test]}}
  - env: GCC_VERSION=5 BUILD_TYPE=Debug ARCH=64
    compiler: gcc
    addons: { apt: {packages: [g++-5] , sources: [ubuntu-toolchain-r-test]}}
#  - env: GCC_VERSION=6 BUILD_TYPE=Debug ARCH=32
#    addons: { postgresql: "10" , apt: {packages: [g++-6-multilib,"linux-libc-dev:i386",postgresql-10,postgresql-client-10] , sources: [ubuntu-toolchain-r-test]}}
  - env: GCC_VERSION=6 BUILD_TYPE=Debug ARCH=64
    compiler: gcc
    addons: { apt: {packages: [g++-6] , sources: [ubuntu-toolchain-r-test]}}
#  - env: GCC_VERSION=7 BUILD_TYPE=Debug ARCH=32
#    addons: &gcc7_32 { postgresql: "10" , apt: {packages: [g++-7-multilib,rpm,doxygen,"linux-libc-dev:i386",postgresql-10,postgresql-client-10] , sources: [ubuntu-toolchain-r-test]}}
#  - env: GCC_VERSION=7 BUILD_TYPE=Release ARCH=32
#    addons: *gcc7_32
  - env: GCC_VERSION=7 BUILD_TYPE=Debug ARCH=64
    compiler: gcc
    addons: &gcc7_64 { apt: {packages: [g++-7,rpm,doxygen] , sources: [ubuntu-toolchain-r-test]}}
  - env: GCC_VERSION=7 BUILD_TYPE=Release ARCH=64
    compiler: gcc
    addons: *gcc7_64
#  - env: CLANG_VERSION=3.6 BUILD_TYPE=Release ARCH=32
#    addons: { postgresql: "10" , apt: {packages: [clang-3.6,libstdc++-6-dev,postgresql-10,postgresql-client-10] , sources: [ubuntu-toolchain-r-test]}}
  - env: CLANG_VERSION=3.6 BUILD_TYPE=Release ARCH=64
    compiler: clang
    addons: { apt: {packages: [clang-3.6]}}
#  - env: CLANG_VERSION=3.7 BUILD_TYPE=Release ARCH=32
#    addons: { postgresql: "10" , apt: {packages: [clang-3.7,libstdc++-6-dev,postgresql-10,postgresql-client-10] , sources: [ubuntu-toolchain-r-test,llvm-toolchain-precise-3.7]}}
  - env: CLANG_VERSION=3.7 BUILD_TYPE=Release ARCH=64
    compiler: clang
    addons: { apt: {packages: [clang-3.7]}}
#  - env: CLANG_VERSION=3.8 BUILD_TYPE=Release ARCH=32
#    addons: { postgresql: "10" , apt: {packages: [clang-3.8,libstdc++-6-dev,postgresql-10,postgresql-client-10] , sources: [ubuntu-toolchain-r-test]}}
  - env: CLANG_VERSION=3.8 BUILD_TYPE=Release ARCH=64
    compiler: clang
    addons: { apt: {packages: [clang-3.8]}}
#  - env: CLANG_VERSION=3.9 BUILD_TYPE=Release ARCH=32
#    addons: { postgresql: "10" , apt: {packages: [clang-3.9,libstdc++-6-dev,postgresql-10,postgresql-client-10] , sources: [ubuntu-toolchain-r-test,llvm-toolchain-trusty-3.9]}}
  - env: CLANG_VERSION=3.9 BUILD_TYPE=Release ARCH=64
    compiler: clang
    addons: { apt: {packages: [clang-3.9]}}
#  - env: CLANG_VERSION=4.0 BUILD_TYPE=Release ARCH=32
#    addons: { postgresql: "10" , apt: {packages: [clang-4.0,libstdc++-6-dev,postgresql-10,postgresql-client-10] , sources: [ubuntu-toolchain-r-test,llvm-toolchain-trusty-4.0]}}
  - env: CLANG_VERSION=4.0 BUILD_TYPE=Release ARCH=64
    compiler: clang
    addons: { apt: {packages: [clang-4.0]}}
#  - env: CLANG_VERSION=5.0 BUILD_TYPE=Release ARCH=32
#    addons: { postgresql: "10" , apt: {packages: [clang-5.0,libstdc++-6-dev,postgresql-10,postgresql-client-10] , sources: [ubuntu-toolchain-r-test,llvm-toolchain-trusty-5.0]}}
  - env: CLANG_VERSION=5.0 BUILD_TYPE=Release ARCH=64
    compiler: clang
    addons: { apt: {packages: [clang-5.0]}}
#  - env: CLANG_VERSION=6.0 BUILD_TYPE=Debug ARCH=32
#    addons: &clang6_32 { postgresql: "10" , apt: {packages: [clang-6.0,libstdc++-6-dev,postgresql-10,postgresql-client-10] , sources: [ubuntu-toolchain-r-test,llvm-toolchain-trusty-6.0]}}
#  - env: CLANG_VERSION=6.0 BUILD_TYPE=Release ARCH=32
#    addons: *clang6_32
  - env: CLANG_VERSION=6.0 BUILD_TYPE=Debug ARCH=64
    compiler: clang
    addons: &clang6_64 { apt: {packages: [clang-6.0]}}
  - env: CLANG_VERSION=6.0 BUILD_TYPE=Release ARCH=64
    compiler: clang
    addons: *clang6_64
  - env: CLANG_VERSION=7 BUILD_TYPE=Release ARCH=64
    compiler: clang
    addons: { apt: {packages: [clang-7], sources: [llvm-toolchain-xenial-7]}}
branches:
  only:
  - develop
  - master
  - "/^v\\d+\\.\\d+\\.\\d+$/"
before_install:
- |
  if [ -n "$GCC_VERSION" ]; then
    export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}" GCOV="gcov-${GCC_VERSION}";
  fi
- |
  if [ -n "$CLANG_VERSION" ]; then
    export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}";
  fi
- sudo sed -i -e '/local.*peer/s/postgres/all/' -e 's/peer\|md5/trust/g' /etc/postgresql/*/main/pg_hba.conf
- sudo service postgresql restart
- sleep 1
install:
- |
  if [[ $TRAVIS_OS_NAME != "osx" ]]; then
    cd ${TRAVIS_BUILD_DIR}
    wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.11.orig.tar.gz
    tar xf lcov_1.11.orig.tar.gz
    sudo make -C lcov-1.11/ install
    gem install coveralls-lcov
    lcov --version
  fi
- JOBS=2
- CMAKE_VERSION=3.7.2
- |
  if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
    CMAKE_URL="https://cmake.org/files/v${CMAKE_VERSION%.[0-9]}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz"
    mkdir cmake && travis_retry wget --no-check-certificate -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
    export PATH=${DEPS_DIR}/cmake/bin:${PATH}
  else
    brew install cmake || brew upgrade cmake
  fi
- cmake --version
before_script:
- |
  if [[ $TRAVIS_OS_NAME != "osx" ]]; then
    mysql -e 'create database matador_test;';
  fi
- psql -c "CREATE DATABASE matador_test;" -U postgres
- psql -c "CREATE USER test WITH PASSWORD 'test123';" -U postgres
- mkdir build
- cd build
- |
  if [ "$GCOV" == "gcov-5" ] && [ "$BUILD_TYPE" == "Debug" ] && [ "$ARCH" == "64" ]; then
    cmake -DCMAKE_CXX_COMPILER=${COMPILER} -DARCH=${ARCH} -DGCOV_BINARY=${GCOV} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCOVERAGE=true -DMATADOR_ODBC_TEST=false -DMYSQL_CONNECTION_STRING:STRING="mysql://root@127.0.0.1/matador_test" ..;
    lcov --directory include --directory src --directory test --zerocounters
  else
    cmake -DCMAKE_CXX_COMPILER=${COMPILER} -DARCH=${ARCH} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DMATADOR_ODBC_TEST=false -DMYSQL_CONNECTION_STRING:STRING="mysql://root@127.0.0.1/matador_test" ..;
  fi
script:
- make
- make test ARGS=-V
after_success:
- |
  if [ "$GCOV" == "gcov-5" ] && [ "$BUILD_TYPE" == "Debug" ] && [ "$ARCH" == "64" ]; then
    cd ${TRAVIS_BUILD_DIR}
    type $GCOV
    lcov --no-external --base-directory ${TRAVIS_BUILD_DIR} --directory build/src --directory build/test --capture --gcov-tool `which $GCOV` --output-file coverage.info
    lcov --remove coverage.info 'build/src/*' 'build/test/*' --gcov-tool `which $GCOV` --output-file coverage.info
    lcov --list coverage.info
    coveralls-lcov --repo-token=${COVERALLS_TOKEN} coverage.info
  fi
before_deploy:
- cd ${TRAVIS_BUILD_DIR}
- cmake --build build --target web
- cmake --build build --target package
- export RELEASE_TGZ_FILE=$(ls Package/*.tar.gz)
- export RELEASE_DEB_FILE=$(ls Package/*.deb)
- export RELEASE_RPM_FILE=$(ls Package/*.rpm)
- echo "deploying $RELEASE_TGZ_FILE, $RELEASE_DEB_FILE and $RELEASE_RPM_FILE to GitHub
  releases"
notifications:
  email:
    recipients:
    - sascha.kuehl@gmx.net
  on_success: change
  on_failure: always

deploy:
  provider: releases
  api_key:
    secure: rXDCwgPmhkO4Z14VOrHh89s2aN3Mhi7cuVL5nf6zivwe8YESHQGtxbNOotq/UK2Y2sPkK8Eb+F1OLuxxvnZTOPJTzXP/QYOa+GoRm/YifzkOa3Yz3zE6MD0W3bfyzhSmaUeko+2jOECccrPYtyCjmWQY/Ey/0JvGdunOoqq1sso=
  file:
  - "${RELEASE_TGZ_FILE}"
  - "${RELEASE_DEB_FILE}"
  - "${RELEASE_RPM_FILE}"
  skip_cleanup: true
  on:
    tags: true
    condition: "$GCC_VERSION = 7 && $BUILD_TYPE = Release"
    all_branches: true
    repo: zussel/matador
